#include <iostream>
#include <vector>

using namespace std;

// Function to display the game board
void displayBoard(const vector<vector<char>>& board) {
    cout << "Current Board:" << endl;
    for (int i = 0; i < 3; ++i) {
        for (int j = 0; j < 3; ++j) {
            cout << board[i][j];
            if (j < 2) cout << " | ";
        }
        cout << endl;
        if (i < 2) cout << "--|---|--" << endl;
    }
}

// Function to check if the current player has won
bool checkWin(const vector<vector<char>>& board, char currentPlayer) {
    // Check rows, columns, and diagonals for a win
    for (int i = 0; i < 3; ++i) {
        if (board[i][0] == currentPlayer && board[i][1] == currentPlayer && board[i][2] == currentPlayer)
            return true;
        if (board[0][i] == currentPlayer && board[1][i] == currentPlayer && board[2][i] == currentPlayer)
            return true;
    }
    if (board[0][0] == currentPlayer && board[1][1] == currentPlayer && board[2][2] == currentPlayer)
        return true;
    if (board[0][2] == currentPlayer && board[1][1] == currentPlayer && board[2][0] == currentPlayer)
        return true;

    return false;
}

// Function to check if the game is a draw
bool checkDraw(const vector<vector<char>>& board) {
    for (int i = 0; i < 3; ++i) {
        for (int j = 0; j < 3; ++j) {
            if (board[i][j] == ' ') {
                return false;
            }
        }
    }
    return true;
}

// Function to switch the current player between 'X' and 'O'
char switchPlayer(char currentPlayer) {
    return (currentPlayer == 'X') ? 'O' : 'X';
}

// Function to reset the board for a new game
void resetBoard(vector<vector<char>>& board) {
    for (int i = 0; i < 3; ++i) {
        for (int j = 0; j < 3; ++j) {
            board[i][j] = ' ';
        }
    }
}

// Main game function
int main() {
    vector<vector<char>> board(3, vector<char>(3, ' ')); // 3x3 board initialized with empty spaces
    char currentPlayer = 'X';  // 'X' starts the game
    bool gameWon = false;
    bool gameDraw = false;
    char playAgain;

    do {
        resetBoard(board);
        gameWon = false;
        gameDraw = false;
        currentPlayer = 'X';

        while (!gameWon && !gameDraw) {
            displayBoard(board);
            int row, col;

            // Player move input
            cout << "Player " << currentPlayer << "'s turn. Enter row (1-3) and column (1-3) for your move: ";
            cin >> row >> col;

            // Adjust for 0-based index
            row--;
            col--;

            // Check if the selected cell is valid and empty
            if (row >= 0 && row < 3 && col >= 0 && col < 3 && board[row][col] == ' ') {
                board[row][col] = currentPlayer;

                // Check for win or draw
                gameWon = checkWin(board, currentPlayer);
                if (gameWon) {
                    displayBoard(board);
                    cout << "Player " << currentPlayer << " wins!" << endl;
                } else {
                    gameDraw = checkDraw(board);
                    if (gameDraw) {
                        displayBoard(board);
                        cout << "The game is a draw!" << endl;
                    } else {
                        // Switch to the other player
                        currentPlayer = switchPlayer(currentPlayer);
                    }
                }
            } else {
                cout << "Invalid move! Please try again." << endl;
            }
        }

        // Ask if players want to play again
        cout << "Do you want to play again? (y/n): ";
        cin >> playAgain;

    } while (playAgain == 'y' || playAgain == 'Y');

    cout << "Thank you for playing!" << endl;
    return 0;
}
